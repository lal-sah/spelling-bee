buildscript {    // Configuration for building
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
	jcenter()    // Bintray's repository - a fast Maven Central mirror & more
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'    // latest App Engine Gradle tasks
	}
}

apply plugin: 'java'                              // standard Java tasks
//apply plugin: 'war'                               // standard Web Archive plugin
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.nt.apps.spellingbee'
version = '0.0.1-SNAPSHOT'
//group   = "com.example.appenginej8"        // Generated output GroupId
//version = "1.0-SNAPSHOT"       // Version in generated output
sourceCompatibility = 1.8     // App Engine Flexible uses Java 8
targetCompatibility = 1.8     // App Engine Flexible uses Java 8

repositories {
	   // repositories for Jar's you access in your code
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
  }
  mavenCentral()
  jcenter()
}

dependencies {
	  compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's
	  //providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
	
	  //compile 'jstl:jstl:1.2'
	
	  // Add your dependencies here.
	  //  compile 'com.google.cloud:google-cloud:+'   // Latest Cloud API's http://googlecloudplatform.github.io/google-cloud-java
	
	  testCompile 'junit:junit:4.12'
	  testCompile 'com.google.truth:truth:0.33'
	  testCompile 'org.mockito:mockito-all:1.10.19'
	
	  testCompile 'com.google.appengine:appengine-testing:+'
	  testCompile 'com.google.appengine:appengine-api-stubs:+'
	  testCompile 'com.google.appengine:appengine-tools-sdk:+'
  
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	
	runtime('mysql:mysql-connector-java')
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')
}

// Always run unit tests
appengineDeploy.dependsOn test
appengineStage.dependsOn test

/*appengine {  // App Engine tasks configuration
  run {      // local (dev_appserver) configuration (standard environments only)
    port = 8080                 // default
  }

  deploy {   // deploy configuration
    stopPreviousVersion = true  // default - stop the current version
    promote = true              // default - & make this the current version
  }
}*/
appengine {  // App Engine tasks configuration
  deploy {   // deploy configuration

  }
}

test {
  useJUnit()
  testLogging.showStandardStreams = true
  beforeTest { descriptor ->
     logger.lifecycle("test: " + descriptor + "  Running")
  }

  onOutput { descriptor, event ->
     logger.lifecycle("test: " + descriptor + ": " + event.message )
  }
  afterTest { descriptor, result ->
    logger.lifecycle("test: " + descriptor + ": " + result )
  }
}